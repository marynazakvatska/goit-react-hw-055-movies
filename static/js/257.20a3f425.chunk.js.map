{"version":3,"file":"static/js/257.20a3f425.chunk.js","mappings":"uQACA,IAAMA,EAAM,mCAGL,SAASC,IACd,OACEC,MAAM,yDAAD,OACsDF,IAExDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAEnB,CAIM,SAASC,EAAkBC,GAChC,OACEL,MAAM,qDAAD,OACkDF,EADlD,kBAC+DO,IAEjEJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACfF,MAAK,SAAAK,GAAI,OAAGA,EAAKC,OAAR,GAEb,CAGM,SAASC,EAAmBC,GACjC,OACET,MAAM,sCAAD,OACmCS,EADnC,oBACuDX,EADvD,oBAGDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAEpB,CAKM,SAASO,EAAmBD,GACjC,OACET,MAAM,sCAAD,OACmCS,EADnC,4BAC+DX,EAD/D,oBAGDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAEpB,CAGM,SAASQ,EAAmBF,GACjC,OACET,MAAM,sCAAD,OACmCS,EADnC,4BAC+DX,EAD/D,2BAGDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAEpB,C,8HCrDYS,E,OAASC,GAAAA,OAAH,yD,SCGJ,SAASC,IAAgB,IAAD,IAC3BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOZ,EAAP,KAAca,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAQlD,OALAC,EAAAA,EAAAA,YAAU,YACdjB,EAAAA,EAAAA,IAAmBO,GAASd,MAAK,SAAAK,GAAI,OAAIY,EAASZ,EAAb,GAChC,GAAE,CAACS,KAIA,iCACI,UAACH,EAAD,gBAAS,SAAC,KAAD,CAAOc,GAAIL,EAAWM,QAAtB,qBAAT,OAECtB,IAAS,4BACL,gBAAKuB,IAAG,yCAAoCvB,EAAMwB,aAAeC,IAAKzB,EAAM0B,kBAC7E,wBAAM1B,EAAM0B,kBACZ,yCAAiBC,KAAKC,MAA2B,GAArB5B,EAAM6B,cAAlC,QACA,sCAEA,uBAAI7B,EAAM8B,YACV,oCAPM,KAOW,wBACpB9B,EAAM+B,QACL/B,EAAM+B,OAAOC,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,OAGpB,4BACI,oDACA,2BAEI,yBAAI,SAAC,KAAD,CAASd,GAAG,OAAZ,qBACJ,yBAAI,SAAC,KAAD,CAASA,GAAI,UAAb,2BAEf,SAAC,EAAAe,SAAD,WACb,SAAC,KAAD,cAQC,C","sources":["components/fetchApi.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nconst KEY = \"d0c71efd73c6a531b3a5107b615dfe5b\"\n\n\nexport function fetchAllMovies() {  \n  return (\n    fetch(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n    )\n      .then(response => response.json())\n  );\n}\n\n\n\nexport function fetchSearchMovies(movie) {  //список найпопулярніших фільмів на сьогодні\n  return (\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${movie}`\n    )\n      .then(response => response.json())\n    .then(data =>data.results)\n)\n}\n\n\nexport function fetchhMovieDetails(movie_id) {  \n  return (\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}&language=en-US`\n    )\n       .then(response => response.json())\n  );\n}\n\n\n\n\nexport function fetchhMovieCredits(movie_id) {\n  return (\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n    )\n       .then(response => response.json())\n  );\n}\n\n\nexport function fetchhMovieReviews(movie_id) {  \n  return (\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    )\n       .then(response => response.json())\n  );\n}\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\npadding: 15px;\nfont-size: 30px\n`\n\n","import { useState, useEffect, useRef, Suspense } from \"react\"\nimport { useParams, NavLink, useLocation, Link, Outlet } from \"react-router-dom\"\nimport { fetchhMovieDetails } from \"components/fetchApi\"\nimport { Button } from \"./MovieDetails.styled\";\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const backButton = useRef(location.state?.from ?? \"/\")\n\n\n    useEffect(() => {\nfetchhMovieDetails(movieId).then(data => setMovie(data))\n    }, [movieId])\n\n\n    return (\n        <>\n            <Button> <Link  to={backButton.current}>Go back</Link> </Button>\n        \n            {movie && <div>\n                 <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.original_title} />\n                <h1>{ movie.original_title}</h1>\n                <p>User Score : {Math.round(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n\n                <p>{movie.overview}</p>\n                <h2>Genres:</h2> <ul>\n            {movie.genres &&\n              movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n                        </ul>\n                \n                <div>\n                    <h3>Additional information</h3>\n                    <ul>\n\n                        <li><NavLink to='cast'>Cast</NavLink></li>\n                        <li><NavLink to ='reviews'>Reviews</NavLink></li>\n                    </ul>\n             <Suspense>\n<Outlet />\n       </Suspense>       \n                </div>\n            \n            </div>\n            }\n        </>\n    )\n}"],"names":["KEY","fetchAllMovies","fetch","then","response","json","fetchSearchMovies","movie","data","results","fetchhMovieDetails","movie_id","fetchhMovieCredits","fetchhMovieReviews","Button","styled","MovieDetails","movieId","useParams","useState","setMovie","location","useLocation","backButton","useRef","state","from","useEffect","to","current","src","poster_path","alt","original_title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense"],"sourceRoot":""}